{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/page-not-found/page-not-found.component.ts","webpack:///src/app/components/page-not-found/page-not-found.component.html","webpack:///src/app/constants/endpoints.const.ts","webpack:///src/app/constants/router-path.const.ts","webpack:///src/app/services/app-toastr.service.ts","webpack:///src/app/services/interceptors/http-interceptor.service.ts","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/url-construct.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","LOGIN","pathMatch","component","DASHBOARD","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","DashboardComponent","LoginComponent","_fb","_loginService","loginForm","group","username","minLength","password","console","log","value","authenticateUser$","subscribe","onSubmitLogin","PageNotFoundComponent","DEV_PORT","Endpoints","LOGIN_AUTHENTICATE","LOGIN_AUTHENTICATE_LOCAL","RouterPath","SLASH","AppToastrService","_toastr","message","success","error","toastrConfig","preventDuplicates","providedIn","HttpInterceptorService","_tokenExtractor","next","authReq","clone","handle","pipe","LoginService","_http","_router","_url","loginUser","url","mainUrl","get","data","userDetails","loginDetails","navigate","preventDuplicate","UrlConstructService","isOn4200","window","location","port","use","getIsOn4200","environment","production","bootstrapModule","catch","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AACYC,gBAAU,EAAE,wEAAWC,KADnC;AAC0CC,eAAS,EAAE;AADrD,KADqB,EAIrB;AACEH,UAAI,EAAE,wEAAWE,KADnB;AAC0BE,eAAS,EAAE;AADrC,KAJqB,EAOrB;AACEJ,UAAI,EAAE,wEAAWK,SADnB;AAC8BD,eAAS,EAAE;AADzC,KAPqB,EAUrB;AACEJ,UAAI,EAAE,IADR;AACcI,eAAS,EAAE;AADzB,KAVqB,CAAvB;;QAmBaE,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBR,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBO,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBR,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AC3B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaY,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,WAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA0CaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBATT,CACT;AACEC,eAAO,EAAE,sEADX;AAEEC,gBAAQ,EAAE,sGAFZ;AAGEC,aAAK,EAAE;AAHT,OADS,C;AAMV,gBAfQ,CACP,uEADO,EAEP,4FAFO,EAGP,wDAAaV,OAAb,EAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,qEANO,EAOP,oEAPO,CAeR;;;;0HAGUO,S,EAAS;AAAA,uBAvBlB,2DAuBkB,EAtBlB,gFAsBkB,EArBlB,0GAqBkB,EApBlB,6FAoBkB;AApBA,kBAGlB,uEAHkB,EAIlB,4FAJkB,EAIK,uDAJL,EAMlB,0DANkB,EAOlB,kEAPkB,EAQlB,qEARkB,EASlB,oEATkB;AAoBA,O;AAXF,K;;;;;sEAWPA,S,EAAS;cAzBrB,sDAyBqB;eAzBZ;AACRI,sBAAY,EAAE,CACZ,2DADY,EAEZ,gFAFY,EAGZ,0GAHY,EAIZ,6FAJY,CADN;AAORV,iBAAO,EAAE,CACP,uEADO,EAEP,4FAFO,EAGP,wDAAaD,OAAb,EAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,qEANO,EAOP,oEAPO,CAPD;AAgBRY,mBAAS,EAAE,CACT;AACEJ,mBAAO,EAAE,sEADX;AAEEC,oBAAQ,EAAE,sGAFZ;AAGEC,iBAAK,EAAE;AAHT,WADS,CAhBH;AAuBRG,mBAAS,EAAE,CAAC,2DAAD;AAvBH,S;AAyBY,Q;;;;;;;;;;;;;;;;;;AC1CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,kB;;;AAEX,oCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,oC;AAAA,c;AAAA,a;AAAA;AAAA;ACP/B;;AAAG;;AAAgB;;;;;;;;sEDONA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTV,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;AEN/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaS,c;;;AAEX,8BAAoBC,GAApB,EAA8CC,aAA9C,EAA2E;AAAA;;AAAvD,aAAAD,GAAA,GAAAA,GAAA;AAA0B,aAAAC,aAAA,GAAAA,aAAA;AAAgC;;;;mCAItE;AACN,eAAKC,SAAL,GAAkB,KAAKF,GAAL,CAASG,KAAT,CAAe;AAC/BC,oBAAQ,EAAC,CAAC,OAAD,EAAS,CAAC,0DAAWC,SAAX,CAAqB,CAArB,CAAD,CAAT,CADsB;AAE/BC,oBAAQ,EAAE,CAAC,OAAD,EAAS,CAAC,0DAAWD,SAAX,CAAqB,CAArB,CAAD,CAAT;AAFqB,WAAf,CAAlB;AAID;;;wCAEY;AACXE,iBAAO,CAACC,GAAR,CAAY,KAAKN,SAAL,CAAeO,KAA3B;;AACA,eAAKR,aAAL,CAAmBS,iBAAnB,CAAqC,KAAKR,SAAL,CAAeO,KAApD,EACCE,SADD;AAGD;;;;;;;uBAlBUZ,c,EAAc,2H,EAAA,qI;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,2oC;AAAA;AAAA;ACT3B;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAmC;;AAAO;;AAC1C;;AACI;;AACI;;AAEA;;AAAwB;;AAAS;;AACrC;;AAEA;;AACI;;AAEA;;AAA2B;;AAAQ;;AACvC;;AAEA;;AACI;;AACA;;AAAuD;;AAAiB;;AAC5E;;AACA;;AACc;AAAA,mBAAS,IAAAa,aAAA,EAAT;AAAwB,WAAxB,EAAyB,aAAzB,EAAyB;AAAA,mBACxB,IAAAA,aAAA,EADwB;AACT,WADhB;;AACkB;;AAAO;;AACvC;;AACA;;AAA6E;;AACrC;;AAAmB;;AAC3D;;AAA+E;;AACnC;;AAAqB;;AACrE;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA9B8C;;AAAA;;;;;;;;;sEDGjCb,c,EAAc;cAL1B,uDAK0B;eALhB;AACTX,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOauB,qB;;;AAEX,uCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,qB;AAAqB,K;;;YAArBA,qB;AAAqB,yC;AAAA,c;AAAA,a;AAAA;AAAA;ACPlC;;AAAG;;AAAqB;;;;;;;;sEDOXA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTzB,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;AENlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMwB,QAAQ,GAAG,MAAjB;;QAEMC,S;;;;AACc,cAAAC,kBAAA,GAA6B,QAA7B;AACA,cAAAC,wBAAA,GAAmC,mCAAnC;;;;;;;;;;;;;;;;ACJ3B;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,U;;;;AACc,eAAAC,KAAA,GAAQ,GAAR;AACA,eAAArC,SAAA,GAAY,WAAZ;AACA,eAAAH,KAAA,GAAQ,OAAR;;;;;;;;;;;;;;;;ACJ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMayC,gB;;;AAEX,gCAAoBC,OAApB,EAA4C;AAAA;;AAAxB,aAAAA,OAAA,GAAAA,OAAA;AAA2B;;;;gCAEvCC,O,EAAS;AACf,eAAKD,OAAL,CAAaE,OAAb,CAAqBD,OAArB;AACD;;;8BAEKA,O,EAAS;AACb,eAAKD,OAAL,CAAaG,KAAb,CAAmBF,OAAnB;AACD;;;2CAEe;AACd,eAAKD,OAAL,CAAaI,YAAb,CAA0BC,iBAA1B,GAA8C,IAA9C;AACD;;;;;;;uBAdUN,gB,EAAgB,gH;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACVO,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;ACN7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,sB;;;AAEX,sCAAoBC,eAApB,EAA6D;AAAA;;AAAzC,aAAAA,eAAA,GAAAA,eAAA;AAA4C;;;;kCACtDhE,G,EAAuBiE,I,EAAiB;AAChD,cAAMC,OAAO,GAAGlE,GAAG,CAACmE,KAAJ,CAAU,EAAV,CAAhB;AAGA,iBAAOF,IAAI,CAACG,MAAL,CAAYF,OAAZ,EAAqBG,IAArB,EAAP;AAGD;;;;;;;uBAVUN,sB,EAAsB,mI;AAAA,K;;;aAAtBA,sB;AAAsB,eAAtBA,sBAAsB;;;;;sEAAtBA,sB,EAAsB;cADlC;AACkC,Q;;;;;;;;;;;;;;;;;;;;;;ACHnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaO,Y;;;AAEX,4BAAoBC,KAApB,EACUC,OADV,EAEUhB,OAFV,EAGSiB,IAHT,EAGoC;AAAA;;AAHhB,aAAAF,KAAA,GAAAA,KAAA;AACV,aAAAC,OAAA,GAAAA,OAAA;AACA,aAAAhB,OAAA,GAAAA,OAAA;AACD,aAAAiB,IAAA,GAAAA,IAAA;AAA8B;;;;0CAErBC,S,EAAsB;AAAA;;AACtC,cAAIC,GAAG,GAAG,KAAKF,IAAL,CAAUG,OAAV,CAAkB,qEAAUzB,kBAA5B,CAAV;;AACAT,iBAAO,CAACC,GAAR,CAAYgC,GAAZ;AACA,iBAAO,KAAKJ,KAAL,CAAWM,GAAX,CAAeF,GAAf,EACJN,IADI,CAEH,2DAAI,UAACS,IAAD,EAAe;AACjB,gBAAIC,WAAW,GAAcD,IAAI,CAACE,YAAlC;;AACA,gBAAIN,SAAS,CAACnC,QAAV,KAAuBwC,WAAW,CAACxC,QAAnC,IAA+CmC,SAAS,CAACjC,QAAV,KAAuBsC,WAAW,CAACtC,QAAtF,EAAgG;AAC9F,mBAAI,CAAC+B,OAAL,CAAaS,QAAb,CAAsB,CAAC,wEAAW3B,KAAX,GAAmB,wEAAWrC,SAA/B,CAAtB;;AACA,mBAAI,CAACuC,OAAL,CAAaE,OAAb,CAAqB,kBAArB;;AACA,qBAAO,IAAP;AACD,aAJD,MAKK;AACH,mBAAI,CAACF,OAAL,CAAa0B,gBAAb;;AACA,mBAAI,CAAC1B,OAAL,CAAaG,KAAb,CAAmB,mBAAnB;;AACA,qBAAO,KAAP;AACD;AACF,WAZD,CAFG,CAAP;AAiBD;;;;;;;uBA3BUW,Y,EAAY,uH,EAAA,8G,EAAA,4H,EAAA,kI;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVR,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kC,CAGA;;;QAMaqB,mB;;;AAGX,qCAAc;AAAA;;AACZ,aAAKC,QAAL,GAAiBC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,IAAwB,mEAAzC;AACA,aAAKZ,GAAL,GAAW,uDAAX;AACD;;;;sCAEU;AACT,iBAAO,KAAKS,QAAZ;AACD;;;gCAGOxE,I,EAAc;AACpB,cAAI4E,GAAG,GAAI,KAAKC,WAAL,OAAuB,IAAxB,GAAgC,KAAKd,GAAL,GAAW,GAAX,GAAiB/D,IAAjD,GAAwD,MAAMA,IAAxE;AACA,iBAAO4E,GAAP;AACD;;;;;;;uBAhBUL,mB;AAAmB,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACVrB,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACThC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM4B,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,EACGC,KADH,CACS,UAAAC,GAAG;AAAA,aAAIpD,OAAO,CAACiB,KAAR,CAAcmC,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RouterPath } from './constants/router-path.const';\n\n\nconst routes: Routes = [\n  {\n    path: '', redirectTo: RouterPath.LOGIN, pathMatch: 'full'\n  },\n  {\n    path: RouterPath.LOGIN, component: LoginComponent\n  },\n  {\n    path: RouterPath.DASHBOARD, component: DashboardComponent\n  },\n  {\n    path: '**', component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'front-end';\n}\n","<router-outlet></router-outlet>","import { HttpInterceptorService } from './services/interceptors/http-interceptor.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport{ FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule, } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    PageNotFoundComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { LoginService } from './../../services/login.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private _fb: FormBuilder, private _loginService: LoginService) { }\n\n  loginForm:FormGroup;\n\n  ngOnInit(): void {\n    this.loginForm =  this._fb.group({\n      username:['admin',[Validators.minLength(2)]],\n      password: ['admin',[Validators.minLength(2)]]\n    })\n  }\n\n  onSubmitLogin(){\n    console.log(this.loginForm.value)\n    this._loginService.authenticateUser$(this.loginForm.value)\n    .subscribe()\n\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n            <div class=\"card card-signin my-5\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title text-center\">Sign In</h5>\n                    <form class=\"form-signin\" [formGroup]=\"loginForm\">\n                        <div class=\"form-label-group\">\n                            <input type=\"email\" name=\"username\" formControlName=\"username\" id=\"inputEmail\" class=\"form-control\" placeholder=\"User Name\"\n                                required autofocus>\n                            <label for=\"inputEmail\">User Name</label>\n                        </div>\n\n                        <div class=\"form-label-group\">\n                            <input type=\"password\" name=\"password\" formControlName = \"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\"\n                                required>\n                            <label for=\"inputPassword\">Password</label>\n                        </div>\n\n                        <div class=\"custom-control custom-checkbox mb-3\">\n                            <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                            <label class=\"custom-control-label\" for=\"customCheck1\">Remember password</label>\n                        </div>\n                        <button class=\"btn btn-lg btn-primary btn-block text-uppercase\" \n                        type=\"submit\" (click)=\"onSubmitLogin()\"\n                        (keyup.enter)=\"onSubmitLogin()\">Sign in</button>\n                        <hr class=\"my-4\">\n                        <button class=\"btn btn-lg btn-google btn-block text-uppercase\" type=\"submit\"><i\n                                class=\"fab fa-google mr-2\"></i> Sign in with Google</button>\n                        <button class=\"btn btn-lg btn-facebook btn-block text-uppercase\" type=\"submit\"><i\n                                class=\"fab fa-facebook-f mr-2\"></i> Sign in with Facebook</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","\nexport const DEV_PORT = '4200';\n\nexport class Endpoints {\n    public static readonly LOGIN_AUTHENTICATE: string = 'hellos';\n    public static readonly LOGIN_AUTHENTICATE_LOCAL: string = 'assets/data/userLoginDetails.json';\n\n}\n\n","\nexport class RouterPath {\n    public static readonly SLASH = '/';\n    public static readonly DASHBOARD = 'dashboard';\n    public static readonly LOGIN = 'login';\n}","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppToastrService {\n\n  constructor(private _toastr: ToastrService) { }\n\n  success(message) {\n    this._toastr.success(message);\n  }\n\n  error(message) {\n    this._toastr.error(message)\n  }\n\n  preventDuplicate(){\n    this._toastr.toastrConfig.preventDuplicates = true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpRequest, HttpHandler, HttpXsrfTokenExtractor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n  constructor(private _tokenExtractor: HttpXsrfTokenExtractor) { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const authReq = req.clone({\n\n    });\n    return next.handle(authReq).pipe(\n    \n    )\n  }\n}\n","import { UrlConstructService } from './url-construct.service';\nimport { AppToastrService } from './app-toastr.service';\nimport { Endpoints } from './../constants/endpoints.const';\nimport { RouterPath } from './../constants/router-path.const';\nimport { LoginUser } from './../models/userModels';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { tap, map } from 'rxjs/operators'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private _http: HttpClient,\n    private _router: Router,\n    private _toastr: AppToastrService,\n    public _url: UrlConstructService) { }\n\n  authenticateUser$(loginUser: LoginUser) {\n    let url = this._url.mainUrl(Endpoints.LOGIN_AUTHENTICATE);\n    console.log(url);\n    return this._http.get(url)\n      .pipe(\n        map((data: any) => {\n          let userDetails: LoginUser = data.loginDetails;\n          if (loginUser.username === userDetails.username && loginUser.password === userDetails.password) {\n            this._router.navigate([RouterPath.SLASH + RouterPath.DASHBOARD])\n            this._toastr.success(\"Login successful\");\n            return true;\n          }\n          else {\n            this._toastr.preventDuplicate();\n            this._toastr.error(\"Error while login\");\n            return false;\n          }\n        })\n      )\n\n  }\n\n}\n","import { DEV_PORT } from './../constants/endpoints.const';\nimport { Injectable } from '@angular/core';\n\n// @ts-ignore\nimport * as baseUrl from './../../baseurl/base.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlConstructService {\n  private url: string;\n  private isOn4200: boolean;\n  constructor() {\n    this.isOn4200 = (window.location.port == DEV_PORT)\n    this.url = baseUrl['base'];\n  }\n\n  getIsOn4200(): boolean {\n    return this.isOn4200;\n  }\n\n\n  mainUrl(path: string) {\n    let use = (this.getIsOn4200() === true) ? this.url + '/' + path : '/' + path;\n    return use;\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}